package northwind

meta#{'export'}
type Customer = {
    'id': Int64,
    'company': Str,
    'last_name': Str,
    'first_name': Str,
    'email_address': Str,
    'job_title': Str,
    'business_phone': Str,
    'home_phone': Str,
    'mobile_phone': Str,
    'fax_number': Str,
    'address': Str,
    'city': Str,
    'state_province': Str,
    'zip_postal_code': Str,
    'country_region': Str,
    'web_page': Str,
    'notes': Str,
    'attachments': Str
}

meta#{'export': 'api-handler'}
actor CustomersApiHandler() in

    import system.{ArrayList, Int64, LocalDate, Rec, ValueIter}
    import northwind.NorthwindDb

    meta#{'export'}
    handle ask 'GET'#{'headers': headers, 'path': ['customers'], 'query': query, 'context': context} -> Array[Customer] in
        var northwind_db = spawn(new NorthwindDb())
        northwind_db.ask(
            'findAll'#{
                'entity': 'customers',
                'criteria': query
            }
        )
    end

    meta#{'export'}
    handle ask 'GET'#{'headers': headers, 'path': ['customers', customer_id::Int64], 'query': query, 'context': context} -> Customer in
        var northwind_db = spawn(new NorthwindDb())
        northwind_db.ask(
            'findByKey'#{
                'entity': 'customers',
                'key': {'id': customer_id}
            }
        )
    end

    handle ask 'PATCH'#{'headers': headers, 'path': path, 'query': query, 'body': body, 'context': context} in
        throw 'error'#{'message': 'PATCH needs impl', 'details': {'path': path}}
    end

end
